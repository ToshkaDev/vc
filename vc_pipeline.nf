#!/usr/bin/env nextflow

/*
 * Pipeline parameters
 */

// file of input files, one per line
params.input_csv = "${projectDir}/data/paired-end.csv"
// folder with the genome index generated by STAR
params.genome_index="${projectDir}/data/genome/genome_index"

// simple genome indices for GATK (and Picard)
params.genome="${projectDir}/data/genome/genome.fa"
params.genome_fai="${projectDir}/data/genome/genome.fa.fai"
params.genome_dict="${projectDir}/data/genome/genome.dict"

// Standard SNPs and indels for GATK
params.snpdb="${projectDir}/data/snp_db/snpdb.vcf.gz"
params.snpdb_index="${projectDir}/data/snp_db/snpdb.vcf.gz.tbi"
params.indels="${projectDir}/data/snp_db/indels.vcf.gz"
params.indels_ndex="${projectDir}/data/snp_db/indels.vcf.gz.tbi"
params.report_name = "multiqc_report"

// SNPs file derived from the 1000 Genomes Project Phase 3 data, aligned to the GRCh38 (hg38) human genome reference
params.gpp3snp="${projectDir}/data/gpp_vcf/1000G_phase3_sites.hg38.vcf"
params.gpp3snp_index="${projectDir}/data/gpp_vcf/1000G_phase3_sites.hg38.vcf.idx"


// File containing RNA editing events
params.rna_edit_sites = "${projectDir}/data/rna_edit_sites/rna_edit_sites.txt"
// File containing low complexity regions with chromosomes
params.lcr_bed = "${projectDir}/data/lcr/lcr_with_chr.bed"

// File containing common variants with allele frequency >= 0.01
params.gpp3snp_af01="${projectDir}/data/gpp_vcf/1000G_phase3_sites.hg38.af01.vcf"
// File containing the latest ncbi dbsnp variants
params.ncbi_dbsnp = "${projectDir}/data/ncbi_dbsnp/ncbi_dbsnp_latest.common.chr.tsv"

include { FASTP } from './modules/fastp/main.nf'
include { STAR } from './modules/star/main.nf'
include { MULTIQC } from './modules/multiqc/main.nf'
include { GATK_ADD_REPLACE_READ_GROUPS } from './modules/gatk/readgroups/main.nf'
include { GATK_MARK_DUPLICATES } from './modules/gatk/markduplicates/main.nf'
include { GATK_SPLIT_NCIGAR_READS } from './modules/gatk/splitncigar/main.nf'
include { GATK_BASE_RECALIBRATOR } from './modules/gatk/baserecalibrate/main.nf'
include { GATK_APPLY_BQSR } from './modules/gatk/applybqsr/main.nf'
include { GATK_HAPLOTYPE_CALLER } from './modules/gatk/haplotypecaller/main.nf'
include { GATK_VARIANT_FILTRATION } from './modules/gatk/variantfiltration/main.nf'
include { FILTER_RNA_EDIT_SITES } from './modules/filterRNAeditsites/main.nf'
include { FILTER_LCRS } from './modules/filterlcrs/main.nf'
include { FILTER_COMMON_VARIANTS } from './modules/filtercommonvars/main.nf'

workflow {

    read_ch = Channel.fromPath(params.input_csv)
        .splitCsv(header:true)
        .map { row -> [row.sample_id, file(row.fastq_1), file(row.fastq_2)] }

    FASTP(read_ch)

    STAR(FASTP.out.trimmed_reads, params.genome_index)

    MULTIQC(FASTP.out.json.mix(STAR.out.logs).collect(), params.report_name)

    GATK_ADD_REPLACE_READ_GROUPS(STAR.out.bam)

    GATK_MARK_DUPLICATES(GATK_ADD_REPLACE_READ_GROUPS.out.rgs)

    GATK_SPLIT_NCIGAR_READS(GATK_MARK_DUPLICATES.out.dups, params.genome, params.genome_fai, 
        params.genome_dict)

    GATK_BASE_RECALIBRATOR(GATK_SPLIT_NCIGAR_READS.out.cigar, params.genome, 
        params.genome_fai, params.genome_dict, params.snpdb, params.snpdb_index, params.indels,
        params.indels_ndex)
    
    GATK_APPLY_BQSR(GATK_BASE_RECALIBRATOR.out.baserecal, params.genome, 
        params.genome_fai, params.genome_dict)

    GATK_HAPLOTYPE_CALLER(GATK_APPLY_BQSR.out.bqsrapplied, params.genome, 
        params.genome_fai, params.genome_dict, params.gpp3snp, params.gpp3snp_index)

    GATK_VARIANT_FILTRATION(GATK_HAPLOTYPE_CALLER.out.calledsnps, params.genome,
        params.genome_fai, params.genome_dict)
       
    FILTER_RNA_EDIT_SITES(GATK_VARIANT_FILTRATION.out.filtered_variants, params.rna_edit_sites)

    FILTER_LCRS(FILTER_RNA_EDIT_SITES.out.rnaedit_filtered_vars, params.lcr_bed)

    FILTER_COMMON_VARIANTS(FILTER_LCRS.out.lcr_filtered_vars, params.gpp3snp_af01, params.ncbi_dbsnp)
}
